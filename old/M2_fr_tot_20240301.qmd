---
title: "M2 models - feeding ratio total - time_varying intercept"
author: "Viktor & Max"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
 devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")
#remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()

date <- Sys.Date() # for naming when saving objects

```

```{r load cache}
# To load entire cache in interactive r session, do: 
# qwraps2::lazyload_cache_dir(path = paste0(home, "/R/main-analysis/03-fit-diet-models_cache/html"))
```

Read cleaned data

```{r}
#| message: false
#| warning: false

df <- read_csv(paste0(home, "/data/clean/stomachs.csv")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         herring_sc = (herring - mean(herring))/sd(herring),
         saduria_sc = (saduria - mean(saduria))/sd(saduria),          
         sprat_sc = (sprat - mean(sprat))/sd(sprat),
         other_invert_sc = (other_invert - mean(other_invert))/sd(other_invert),
         other_sc = (other - mean(other))/sd(other),
         other_fish_sc = (other_fish - mean(other_fish))/sd(other_fish),
         benth_fish_sc = (benth_fish - mean(benth_fish))/sd(benth_fish),
         year_f = as.factor(Year),
         month_f = as.factor(Month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length)) 

glimpse(df)

```


## Read data

```{r}

# remove empty stomachs 
df_noz <- df |>
 filter( fr_tot > 0 )

# remove na day of year if that is used as a predictor
df_noz_doy <- df_noz |>
  filter( !is.na(day_of_year) ) |>
  mutate(doy_sc = (day_of_year - mean(day_of_year))/sd(day_of_year)) # read_csv(paste0(home, "/data/clean/stomachs.csv")) |> summarise(mean = mean(pred_length))

# reduce number of years to reduce fitting time
df_noz_doy_sel_M2 <- df_noz_doy |> filter( Year %in% c(1982:2022))
mesh_nozdoy_sel_M2 <- make_mesh(df_noz_doy_sel_M2, c("X", "Y"), cutoff = 6)

# missing years
my <- min(df_noz_doy_sel_M2$Year):max(df_noz_doy_sel_M2$Year)
missing_years <- my[!my %in% unique(df_noz_doy_sel_M2$Year)]

```

## Model with time varying effect of predator length, M2f

```{r M2f fit}

time <- Sys.time()

M2f <- 
  sdmTMB(
  data = df_noz_doy_sel_M2,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal 
  mesh = mesh_nozdoy_sel_M2,
  spatial = "off",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M2f) # b_j` gradient > 0.001

#M2f_res2 <- sdmTMBextra::predict_mle_mcmc(M2f, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M2f))
qqline(residuals(M2f))
# qqnorm(residuals(M2f, "mle-mcmc", mcmc_samples = M2f_res2))
# qqline(residuals(M2f, "mle-mcmc", mcmc_samples = M2f_res2))

M2f

saveRDS(M2f, file = paste0("lammska_M2f_",date,".rds"))

```


### Conditional effects for model M2f

```{r cond effects for M2f}
M2f <- readRDS(M2f, file = paste0("lammska_M2f_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2f_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2f_length$depth_sc <- 0
nd_M2f_length$doy_sc <- 0

p_M2f_length <- predict(M2f, newdata = nd_M2f_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M2f_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2f_doy <- predict(M2f, newdata = nd_M2f_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2f_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2f_Year <- predict(M2f, newdata = nd_M2f_Year, re_form = NA, se_fit = TRUE)


# plots M2f
p_M2f_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

pr_M2f_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  ylim(0,0.1) # the cf gets very large for the missing year

p_M2f_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

```

## Length coefficients over time
```{r pred length over time M2f}
M2f <- readRDS(M2f, file = paste0("lammska_M2f_",date,".rds"))

pl_M2 <- as.list(M2f$sd_report, "Estimate")
pls_M2 <- as.list(M2f$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

# intercept <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```


## Next model, M2g. Adding spatial effects

```{r M2g fit}

time <- Sys.time()

M2g <- 
  sdmTMB(
  data = df_noz_doy_sel_M2,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel_M2,
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M2g) # b_j` gradient > 0.001

#M2g_res2 <- sdmTMBextra::predict_mle_mcmc(M2g, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M2g))
qqline(residuals(M2g))

M2g

saveRDS(M2g, file = paste0("lammska_M2g_",date,".rds"))

```

### M2g conditional effects

```{r M2g cond effects}
M2g <- readRDS(M2g, file = paste0("lammska_M2g_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2g_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2g_length$depth_sc <- 0
nd_M2g_length$doy_sc <- 0

p_M2g_length <- predict(M2g, newdata = nd_M2g_length, se_fit = TRUE, re_form = NA)


# Conditional effects of day of the year
nd_M2g_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2g_doy <- predict(M2g, newdata = nd_M2g_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2g_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2g_Year <- predict(M2g, newdata = nd_M2g_Year, re_form = NA, se_fit = TRUE)

p_M2g_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M2g_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M2g_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3)

```

# M2g predator lenght over time 
```{r pred length over time M2g}
M2g <- readRDS(M2g, file = paste0("lammska_M2f_",date,".rds"))

pl_M2 <- as.list(M2g$sd_report, "Estimate")
pls_M2 <- as.list(M2g$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```

## Next model, M2h, adding AR1 spatiotempral effects

```{r M2h fit}

time <- Sys.time()

M2h <- 
  sdmTMB(
  data = df_noz_doy_sel_M2,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel_M2,
  spatiotemporal = "ar1",
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M2h) # b_j` gradient > 0.001

#M2h_res2 <- sdmTMBextra::predict_mle_mcmc(M2h, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M2h))
qqline(residuals(M2h))

M2h

saveRDS(M2h, file = paste0("lammska_M2h_",date,".rds"))

```

### Conditional effects for M2h

```{r M2h cond effects}
M2h <- readRDS(M2h, file = paste0("lammska_M2h_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2h_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2h_length$depth_sc <- 0
nd_M2h_length$doy_sc <- 0

p_M2h_length <- predict(M2h, newdata = nd_M2h_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M2h_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2h_doy <- predict(M2h, newdata = nd_M2h_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2h_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2h_Year <- predict(M2h, newdata = nd_M2h_Year, re_form = NA, se_fit = TRUE)

# Conditional effects of depth
nd_M2h_depth <- data.frame(Year = 1991, depth_sc = seq(min(df_noz_doy_sel_M2$depth_sc), max(df_noz_doy_sel_M2$depth_sc), length.out = 50), pred_length_sc = 0, doy_sc = 0)

pr_M2h_depth <- predict(M2h, newdata = nd_M2h_depth, re_form = NA, se_fit = TRUE)

# plot effects M2h
p_M2h_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M2h_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M2h_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3)

```

# M2h coeffficient of predator length over time  
```{r pred length over time M2h}
M2h <- readRDS(M2h, file = paste0("lammska_M2f_",date,".rds"))

pl_M2 <- as.list(M2h$sd_report, "Estimate")
pls_M2 <- as.list(M2h$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl$b_rw_t, coef.se = pls$b_rw_t)

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```
