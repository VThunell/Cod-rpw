---
title: "M1 models - feeding ratio total"
author: "Viktor & Max"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
editor_options: 
  chunk_output_type: console
---

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
 devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")
#remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()

date <- Sys.Date() # for naming when saving objects

```

```{r load cache}
# To load entire cache in interactive r session, do: 
# qwraps2::lazyload_cache_dir(path = paste0(home, "/R/main-analysis/03-fit-diet-models_cache/html"))
```

Read cleaned data

```{r}
#| message: false
#| warning: false

df <- read_csv(paste0(home, "/data/clean/stomachs.csv")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         herring_sc = (herring - mean(herring))/sd(herring),
         saduria_sc = (saduria - mean(saduria))/sd(saduria),          
         sprat_sc = (sprat - mean(sprat))/sd(sprat),
         other_invert_sc = (other_invert - mean(other_invert))/sd(other_invert),
         other_sc = (other - mean(other))/sd(other),
         other_fish_sc = (other_fish - mean(other_fish))/sd(other_fish),
         benth_fish_sc = (benth_fish - mean(benth_fish))/sd(benth_fish),
         year_f = as.factor(Year),
         month_f = as.factor(Month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length)) 

glimpse(df)

```


## Read data

```{r}

# remove empty stomachs 
df_noz <- df |>
 filter( fr_tot > 0 )

# remove na day of year if that is used as a predictor
df_noz_doy <- df_noz |>
  filter( !is.na(day_of_year) ) |>
  mutate(doy_sc = (day_of_year - mean(day_of_year))/sd(day_of_year)) # read_csv(paste0(home, "/data/clean/stomachs.csv")) |> summarise(mean = mean(pred_length))

# reduce number of years to reduce fitting time
df_noz_doy_sel <- df_noz_doy |> filter( Year %in% c(1963:2022))
mesh_nozdoy_sel <- make_mesh(df_noz_doy_sel, c("X", "Y"), cutoff = 6)

# missing years
my <- min(df_noz_doy_sel$Year):max(df_noz_doy_sel$Year)
missing_years <- my[!my %in% unique(df_noz_doy_sel$Year)]

```

## Model with time varying effect of predator length, M1f

```{r M1f fit}

time <- Sys.time()

M1f <- 
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + as.factor(Year) + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 0 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal 
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M1f) # b_j` gradient > 0.001

#M1f_res2 <- sdmTMBextra::predict_mle_mcmc(M1f, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M1f))
qqline(residuals(M1f))
# qqnorm(residuals(M1f, "mle-mcmc", mcmc_samples = M1f_res2))
# qqline(residuals(M1f, "mle-mcmc", mcmc_samples = M1f_res2))

M1f

saveRDS(M1f, file = paste0("lammska_M1f_",date,".rds"))

```


### Conditional effects for model M1f

```{r cond effects for M1f}
#M1f <- readRDS(M1f, file = paste0("lammska_M1f_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M1f_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel$pred_length_sc), max(df_noz_doy_sel$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel$Year))
nd_M1f_length$depth_sc <- 0
nd_M1f_length$doy_sc <- 0

p_M1f_length <- predict(M1f, newdata = nd_M1f_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M1f_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel$doy_sc), max(df_noz_doy_sel$doy_sc), length.out = 50))

p_M1f_doy <- predict(M1f, newdata = nd_M1f_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M1f_Year <- data.frame(Year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M1f_Year <- predict(M1f, newdata = nd_M1f_Year, re_form = NA, se_fit = TRUE)


# plots M1f
p_M1f_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

pr_M1f_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  ylim(0,max(exp(pr_M1f_Year$est) * 1.2)) # the cf gets very large for the missing year

p_M1f_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

```

## Length coefficients over time
```{r pred length over time M1f}
#M1f <- readRDS(M1f, file = paste0("lammska_M1f_",date,".rds"))

pl <- as.list(M1f$sd_report, "Estimate")
pls <- as.list(M1f$sd_report, "Std. Error")

ypl <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl$b_rw_t, coef.se = pls$b_rw_t)

ypl |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length")

```
What does this mean? That length of the cod is of higher importance in the recent decaed than in the 80s and 90s? A cod needs to be long in order to keep his stomach full in e.g. 2015 but in 1993 a small cod could have a full stomach too... Or (!) does it mean that large cod had more in their stomach in 2015 compared to 1993.

## Next model, M1g. Adding spatial effects

```{r M1g fit}

time <- Sys.time()

M1g <- 
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + as.factor(Year) + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 0 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel,
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M1g) 

#M1g_res2 <- sdmTMBextra::predict_mle_mcmc(M1g, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M1g))
qqline(residuals(M1g))

M1g

saveRDS(M1g, file = paste0("lammska_M1g_",date,".rds"))

```

### M1g conditional effects

```{r M1g cond effects}
#M1g <- readRDS(M1g, file = paste0("lammska_M1g_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M1g_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel$pred_length_sc), max(df_noz_doy_sel$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel$Year))
nd_M1g_length$depth_sc <- 0
nd_M1g_length$doy_sc <- 0

p_M1g_length <- predict(M1g, newdata = nd_M1g_length, se_fit = TRUE, re_form = NA)


# Conditional effects of day of the year
nd_M1g_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel$doy_sc), max(df_noz_doy_sel$doy_sc), length.out = 50))

p_M1g_doy <- predict(M1g, newdata = nd_M1g_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M1g_Year <- data.frame(Year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M1g_Year <- predict(M1g, newdata = nd_M1g_Year, re_form = NA, se_fit = TRUE)

p_M1g_length |>
ggplot(aes(pred_length_sc, exp(est),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M1g_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M1g_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  ylim(0,max(exp(pr_M1f_Year$est) * 1.2)) # the cf gets very large for the missing year

```

# M1g predator lenght over time 
```{r pred length over time M1g}
#M1g <- readRDS(M1g, file = paste0("lammska_M1g_",date,".rds"))

pl <- as.list(M1g$sd_report, "Estimate")
pls <- as.list(M1g$sd_report, "Std. Error")

ypl <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl$b_rw_t, coef.se = pls$b_rw_t)

ypl |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length")

```

## Next model, M1h, adding AR1 spatiotempral effects

```{r M1h fit}

time <- Sys.time()

M1h <- 
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + as.factor(Year) + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 0 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel,
  spatiotemporal = "ar1",
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M1h) # b_j` gradient > 0.001

#M1h_res2 <- sdmTMBextra::predict_mle_mcmc(M1h, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M1h))
qqline(residuals(M1h))

M1h

saveRDS(M1h, file = paste0("lammska_M1h_",date,".rds"))

```

### Conditional effects for M1h

```{r M1h cond effects}
#M1h <- readRDS(M1h, file = paste0("lammska_M1h_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M1h_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel$pred_length_sc), max(df_noz_doy_sel$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel$Year))
nd_M1h_length$depth_sc <- 0
nd_M1h_length$doy_sc <- 0

p_M1h_length <- predict(M1h, newdata = nd_M1h_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M1h_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel$doy_sc), max(df_noz_doy_sel$doy_sc), length.out = 50))

p_M1h_doy <- predict(M1h, newdata = nd_M1h_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M1h_Year <- data.frame(Year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M1h_Year <- predict(M1h, newdata = nd_M1h_Year, re_form = NA, se_fit = TRUE)

# plot effects M1h
p_M1h_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M1h_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M1h_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  ylim(0,max(exp(pr_M1f_Year$est) * 1.2)) # the cf gets very large for the missing year

```

# M1h coeffficient of predator length over time  
```{r pred length over time M1h}
#M1h <- readRDS(M1h, file = paste0("lammska_M1h_",date,".rds"))

pl <- as.list(M1h$sd_report, "Estimate")
pls <- as.list(M1h$sd_report, "Std. Error")

ypl <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl$b_rw_t, coef.se = pls$b_rw_t)

ypl |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length")

```
