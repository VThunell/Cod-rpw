---
title: "Calculate spatial overlap with prey"
author: "Max Lindmark"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out.width: "100%"
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## Load packages & source functions

```{r libraries}
#| cache: false
#| message: false
#| warning: false
#| code-fold: true

library(sdmTMB)

pkgs <- c("tidyverse", "RCurl", "viridis", "devtools", "terra", "readxl", "mapplots", "tidylog", "patchwork") 

# minpack.lm needed if using nlsLM()
if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Packages not on CRAN or dev version
# remotes::install_github("pbs-assess/sdmTMB", dependencies = TRUE)
library(sdmTMB)

# devtools::install_github("seananderson/ggsidekick") # not on CRAN 
library(ggsidekick)
theme_set(theme_sleek())

# Source code for map plots
devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/map-plot.R")

options(ggplot2.continuous.colour = "viridis")

# Source overlap functions
devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/overlap-indices.R")

# Set path
home <- here::here()
```

## Read spatiotemporal predictions from 01-fit-sdm.qmd

```{r}
# Use only one of them because they are so similar
cod_pred <- read_csv(paste0(home, "/output/pred_cod.csv"))
```

## Add in prey to density data
Saduria

```{r read Saduria raster from Gogina et al 2020 ICES}
# TODO: Update years!?
saduria <- terra::rast(paste0(home, "/data/saduria-tif/FWBiomassm_raster_19812019presHighweightcor_no0_newZi.tif"))

WGS84 <- "+proj=longlat +datum=WGS84"

saduria_latlon <- terra::project(saduria, WGS84)

density_saduria <- terra::extract(saduria_latlon, cod_pred %>% dplyr::select(lon, lat), method = "bilinear")

cod_pred$density_saduria <- density_saduria$FWBiomassm_raster_19812019presHighweightcor_no0_newZi

plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year == 1999 & quarter == 4), aes(X*1000, Y*1000, fill = density_saduria)) +
  scale_fill_viridis(trans = "sqrt", name = "Saduria biomass density")

ggsave(paste0(home, "/figures/supp/spatial_saduria_biomass.pdf"), width = 17, height = 17, units = "cm")

cod_pred |> 
  drop_na(density_saduria) |> 
  filter(year == 2015) |> 
  group_by(sub_div) |> 
  summarise(mean_saduria = mean(density_saduria)) |> 
  arrange(desc(mean_saduria))

# interesting! especially given that cod are moving here, this could explain the higher overlap. also interesting that ocygen hasn't decline here substantially
```

Pelagics

```{r}
# TODO: Update years!
# Read data on rectangle level
spr <- read_xlsx(paste0(home, "/data/BIAS/N and B per Rect. 1991-2020.xlsx"),
                 sheet = 4) |>
  mutate(sub_div = ifelse(Sub_Div == "28_2", "28", Sub_Div)) |> 
  filter(sub_div %in% c("24", "25", "26", "27", "28")) |> 
  rename("ices_rect" = "RECT",
         "Year" = "ANNUS") |>
  mutate_at(vars(`1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`), ~replace_na(., 0)) |> # I need to replace NA with 0, else I can't sum! According to Olavi who sent the data, NA means 0 and nothing else. Rectangle*year combinations that do not have information about biomass are simply not included in this data
  mutate(ices_rect = as.factor(ices_rect),
         Species = "Sprat",
         biomass_spr = `1`+`2`+`3`+`4`+`5`+`6`+`7`+`8`, 
         IDr = paste(ices_rect, Year, sep = "."),
         lon = ices.rect(ices_rect)$lon,
         lat = ices.rect(ices_rect)$lat) |> # Make new ID
  filter(Year > 1992 & Year < 2020)

spr <- spr |> add_utm_columns(ll_names = c("lon", "lat"),
                              utm_crs = 32633)

her <- read_xlsx(paste0(home, "/data/BIAS/N and B per Rect. 1991-2020.xlsx"),
                 sheet = 3) |>
  mutate(sub_div = ifelse(Sub_Div == "28_2", "28", Sub_Div)) |> 
  filter(sub_div %in% c("24", "25", "26", "27", "28")) |> 
  rename("ices_rect" = "RECT",
         "Year" = "ANNUS") |>
  mutate_at(vars(`1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`), ~replace_na(., 0)) |>
  mutate(ices_rect = as.factor(ices_rect),
         Species = "Herring",
         biomass_her = `1`+`2`+`3`+`4`+`5`+`6`+`7`+`8`, 
         IDr = paste(ices_rect, Year, sep = "."),
         lon = ices.rect(ices_rect)$lon,
         lat = ices.rect(ices_rect)$lat) |> # Make new ID
  filter(Year > 1992 & Year < 2020)

her <- her |> add_utm_columns(ll_names = c("lon", "lat"),
                              utm_crs = 32633)

# Plot distribution over time in the whole area
plot_map_fc + 
  geom_point(data = spr, aes(X*1000, Y*1000, color = biomass_spr), size = 1.5) +
  facet_wrap(~Year) + 
  scale_color_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")

plot_map_fc + 
  geom_point(data = her, aes(X*1000, Y*1000, color = biomass_her), size = 1.5) +
  facet_wrap(~Year) + 
  scale_color_viridis(trans = "sqrt", name = "Herring biomass (tonnes)")

# How many unique rows per IDr?
her |>
  group_by(IDr) |> 
  mutate(n = n()) |> 
  ggplot(aes(factor(n))) + geom_bar()

spr |>
  group_by(IDr) |> 
  mutate(n = n()) |> 
  ggplot(aes(factor(n))) + geom_bar()

# Ok, some ID's with two rows...
spr |>
  group_by(IDr) |> 
  mutate(n = n()) |> 
  filter(n == 2) |> 
  ungroup() |> 
  as.data.frame() |> 
  head(20)

# It's because rectangles somehow being in different sub divisions.
# I need to group by IDr and summarize
spr_sum <- spr |>
  group_by(IDr) |> 
  summarise(biomass_spr = sum(biomass_spr)) |> # Sum abundance within IDr
  distinct(IDr, .keep_all = TRUE) |> # Remove duplicate IDr
  mutate(ID_temp = IDr) |> # Create temporary IDr that we can use to split in order
  # to get Year and StatRect back into the summarized data
  separate(ID_temp, c("StatRec", "Year"), sep = 4)

nrow(spr_sum) 
nrow(spr)
nrow(spr |> group_by(IDr) |> mutate(n = n()) |> filter(n == 2))

# Check with a specific rectangle
filter(spr_sum, IDr == "39G4.1991")
filter(spr, IDr == "39G4.1991")

# This should equal 1 (new # rows =  old - duplicated IDr)
nrow(spr_sum) / (nrow(spr) - 0.5*nrow(spr |> group_by(IDr) |> mutate(n = n()) |> filter(n == 2)))

# How many rows per rectangle?
spr_sum |>
  group_by(IDr) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  distinct(n)

# Now do the same for herring
her_sum <- her |>
  group_by(IDr) |> 
  summarise(biomass_her = sum(biomass_her)) |> # Sum abundance within IDr
  distinct(IDr, .keep_all = TRUE) |> # Remove duplicate IDr
  mutate(ID_temp = IDr) |> # Create temporary IDr that we can use to split in order
  # to get Year and StatRect back into the summarized data
  separate(ID_temp, c("StatRec", "Year"), sep = 4)

nrow(her_sum) 
nrow(her)
nrow(her |> group_by(IDr) |> mutate(n = n()) |> filter(n == 2))

filter(her_sum, IDr == "39G4.1991")
filter(her, IDr == "39G4.1991")

# This should equal 1 (new # rows =  old - duplicated IDr)
nrow(her_sum) / (nrow(her) - 0.5*nrow(her |> group_by(IDr) |> mutate(n = n()) |> filter(n == 2)))

# How many rows per rectangle?
her_sum |>
  group_by(IDr) |> 
  mutate(n = n()) |> 
  ungroup() |> 
  distinct(n)

# Join pelagic data
pel <- left_join(her_sum, spr_sum)

cod_pred <- cod_pred |>
  mutate(IDr = paste(ices_rect, year, sep = ".")) |> 
  left_join(pel)
  
names(cod_pred)

# If NA on the rectangle level, take the average values across ices rectangles *within* the sub-division
# If no rectangles within the SD, take the annual mean
cod_pred <- cod_pred |> 
  group_by(year, sub_div) |> 
  mutate(biomass_her_year_sd_mean = mean(biomass_her, na.rm = TRUE),
         biomass_spr_year_sd_mean = mean(biomass_spr, na.rm = TRUE)) |> 
  ungroup() |>
  group_by(year) |> 
  mutate(biomass_her_year_mean = mean(biomass_her, na.rm = TRUE),
         biomass_spr_year_mean = mean(biomass_spr, na.rm = TRUE)) |> 
  ungroup() |> 
  mutate(biomass_her = ifelse(is.na(biomass_her), biomass_her_year_sd_mean, biomass_her),
         biomass_spr = ifelse(is.na(biomass_spr), biomass_spr_year_sd_mean, biomass_spr)) |> 
  mutate(biomass_her = ifelse(is.na(biomass_her), biomass_her_year_mean, biomass_her),
         biomass_spr = ifelse(is.na(biomass_spr), biomass_spr_year_mean, biomass_spr)) |> 
  dplyr::select(-biomass_her_year_mean, -biomass_her_year_mean, 
                -biomass_spr_year_sd_mean, -biomass_spr_year_mean)

# Test plot
plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_spr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")

plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_her)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")


# Now add in the sub division values (in case we want to look at that also)
biomass_spr_sd <- read_xlsx(paste0(home, "/data/BIAS/N and B per SD 1991-2020.xlsx"),
                            sheet = 4) |>
  mutate(sub_div = ifelse(Sub_Div == "28_2", "28", Sub_Div)) |>
  filter(sub_div %in% c("24", "25", "26", "27", "28")) |>
  rename("Year" = "ANNUS") |>
  mutate_at(vars(`AGE1`, `AGE2`, `AGE3`, `AGE4`, `AGE5`, `AGE6`, `AGE7`, `AGE8+`), ~replace_na(., 0)) |> # I need to replace NA with 0, else I can't sum! According to Olavi who sent the data, NA means 0 and nothing else. Rectangle*year combinations that do not have information about biomass are simply not included in this data
  mutate(sub_div = as.factor(sub_div),
         Species = "Sprat",
         biomass_spr_sd = `AGE1`+`AGE2`+`AGE3`+`AGE4`+`AGE5`+`AGE6`+`AGE7`+`AGE8+`, # omitting `0+` here
         ID_sd_year = paste(sub_div, Year, sep = ".")) |> # Make new ID
  dplyr::select(biomass_spr_sd, ID_sd_year)

biomass_her_sd <- read_xlsx(paste0(home, "/data/BIAS/N and B per SD 1991-2020.xlsx"),
                            sheet = 3) |>
  mutate(sub_div = ifelse(Sub_Div == "28_2", "28", Sub_Div)) |>
  filter(sub_div %in% c("24", "25", "26", "27", "28")) |>
  rename("Year" = "ANNUS") |>
  mutate_at(vars(`AGE1`, `AGE2`, `AGE3`, `AGE4`, `AGE5`, `AGE6`, `AGE7`, `AGE8+`), ~replace_na(., 0)) |> 
  mutate(sub_div = as.factor(sub_div),
         Species = "Sprat",
         biomass_her_sd = `AGE1`+`AGE2`+`AGE3`+`AGE4`+`AGE5`+`AGE6`+`AGE7`+`AGE8+`,
         ID_sd_year = paste(sub_div, Year, sep = ".")) |>
  dplyr::select(biomass_her_sd, ID_sd_year)

# Add in the same id to the pred_grid
cod_pred <- cod_pred |> mutate(ID_sd_year = paste(sub_div, year, sep = "."))

cod_pred <- left_join(cod_pred, biomass_spr_sd)
cod_pred <- left_join(cod_pred, biomass_her_sd)

# Plot. Here I also have NAs. If NA, take the annual average
plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_spr_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")

plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_her_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Herring biomass (tonnes)")

cod_pred <- cod_pred |> 
  group_by(year) |> 
  mutate(biomass_her_mean_sd = mean(biomass_her_sd, na.rm = TRUE),
         biomass_spr_mean_sd = mean(biomass_spr_sd, na.rm = TRUE)) |> 
  ungroup() |> 
  mutate(biomass_her_sd = ifelse(is.na(biomass_her_sd), biomass_her_mean_sd, biomass_her_sd),
         biomass_spr_sd = ifelse(is.na(biomass_spr_sd), biomass_spr_mean_sd, biomass_spr_sd))

# Save plots with "imputed" biomasses
# subdivision
plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_spr_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")

ggsave(paste0(home, "/figures/supp/spatial_sprat_biomass_sd.pdf"), width = 17, height = 17, units = "cm")

plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_her_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Herring biomass (tonnes)")

ggsave(paste0(home, "/figures/supp/spatial_herring_biomass_sd.pdf"), width = 17, height = 17, units = "cm")

# Ices rectangle
plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_spr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Sprat biomass (tonnes)")

ggsave(paste0(home, "/figures/supp/spatial_sprat_biomass_rec.pdf"), width = 17, height = 17, units = "cm")

plot_map_fc + 
  geom_raster(data = cod_pred |> filter(year < 2020), aes(X*1000, Y*1000, fill = biomass_her)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Herring biomass (tonnes)")

ggsave(paste0(home, "/figures/supp/spatial_herring_biomass_rec.pdf"), width = 17, height = 17, units = "cm")

# Drop NA now (years after 2019 because I don't yet have pelagic data from that time)
cod_pred <- cod_pred |> filter(year < 2020)

# Trim predicted biomass densities
cod_pred <- cod_pred |> filter(est < quantile(est, probs = 0.999))
```

## Calculate spatial overlap indices
Remember, pelagic data is from Q4 while saduria data is not resolved on a finer scale than year

```{r}
# Pelagics
# Calculate overlap indices in space
cod_pel <- cod_pred |> 
  mutate(area = 2) |> 
  filter(quarter == 4) |> 
  group_by(year) |> 
  mutate(# sprat
         cod_spr_ovr = loc_collocspfn(pred = est, prey = biomass_spr),
         cod_spr_ovr_sd = loc_collocspfn(pred = est, prey = biomass_spr_sd),
         
         # herring
         cod_her_ovr = loc_collocspfn(pred = est, prey = biomass_her),
         cod_her_ovr_sd = loc_collocspfn(pred = est, prey = biomass_her_sd)) |> 
  ungroup()
  
# Save total overlap
cod_pel_sum <- cod_pel |> 
  group_by(year) |> 
  summarise(cod_spr_ovr_tot = sum(cod_spr_ovr),
            cod_spr_ovr_sd_tot = sum(cod_spr_ovr_sd),
            cod_her_ovr_tot = sum(cod_her_ovr),
            cod_her_ovr_sd_tot = sum(cod_her_ovr_sd))

write_csv(cod_pel_sum, paste0(home, "/output/cod_pel_sum_ovrlap.csv"))

# Saduria
# Calculate overlap indices in space
cod_ben <- cod_pred |> 
  drop_na(density_saduria) |> 
  group_by(year, quarter) |> 
  mutate(cod_sad_ovr = loc_collocspfn(pred = est, prey = density_saduria)) |> 
  ungroup()

# Save total overlap
cod_ben_sum <- cod_ben |> 
  group_by(year, quarter) |> 
  summarise(cod_sad_ovr_tot = sum(cod_sad_ovr))
  
write_csv(cod_ben_sum, paste0(home, "/output/cod_ben_sum_ovrlap.csv"))
```

Plot overlap in space

```{r plot overlap in space}
# Plot overlap in space
# Sprat
plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year < 2020),
              aes(X*1000, Y*1000, fill = cod_spr_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Cod-Sprat overlap (ICES Rect.)",
                     option = "mako",
                         # trim extreme high values to make spatial variation more visible
                     na.value = "#DEF5E5FF", limits = c(0, quantile(filter(cod_pel, year < 2020)$cod_spr_ovr, 0.999))) +
  labs(caption = paste("maximum estimated overlap =", round(max(filter(cod_pel, year < 2020)$cod_spr_ovr), digits = 3)))

ggsave(paste0(home, "/figures/supp/spr_overlap_space.pdf"), width = 17, height = 17, units = "cm")

# Sprat
p1 <- plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year %in% c(2000, 2019)),
              aes(X*1000, Y*1000, fill = cod_spr_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Cod-Sprat overlap (ICES Rect.)",
                     option = "mako") #+ #,
                         # trim extreme high values to make spatial variation more visible
                     #na.value = "#DEF5E5FF", limits = c(0, quantile(filter(cod_pel, year < 2020)$cod_spr_ovr, 0.999))) +
  #labs(caption = paste("maximum estimated overlap =", round(max(filter(cod_pel, year < 2020)$cod_spr_ovr), digits = 3)))


plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year < 2020),
              aes(X*1000, Y*1000, fill = cod_spr_ovr_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(name = "Cod-Sprat overlap", trans = "sqrt",
                     option = "mako")

ggsave(paste0(home, "/figures/supp/spr_overlap_space_sd.pdf"), width = 17, height = 17, units = "cm")

# Herring
plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year < 2020),
              aes(X*1000, Y*1000, fill = cod_her_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Cod-Herring overlap (ICES Rect.)",
                     option = "mako",
                         # trim extreme high values to make spatial variation more visible
                     na.value = "#DEF5E5FF", limits = c(0, quantile(filter(cod_pel, year < 2020)$cod_her_ovr, 0.999))) +
  labs(caption = paste("maximum estimated overlap =", round(max(filter(cod_pel, year < 2020)$cod_her_ovr), digits = 3)))

ggsave(paste0(home, "/figures/supp/her_overlap_space.pdf"), width = 17, height = 17, units = "cm")

p2 <- plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year %in% c(2000, 2019)),
              aes(X*1000, Y*1000, fill = cod_her_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Cod-Herring overlap (ICES Rect.)",
                     option = "mako") #+ #,
  #                        # trim extreme high values to make spatial variation more visible
  #                    na.value = "#DEF5E5FF", limits = c(0, quantile(filter(cod_pel, year < 2020)$cod_her_ovr, 0.999))) +
  #labs(caption = paste("maximum estimated overlap =", round(max(filter(cod_pel, year < 2020)$cod_her_ovr), digits = 3)))

plot_map_fc + 
  geom_raster(data = cod_pel |> filter(year < 2020),
              aes(X*1000, Y*1000, fill = cod_her_ovr_sd)) +
  facet_wrap(~year) + 
  scale_fill_viridis(trans = "sqrt", name = "Cod-Herring overlap (ICES Rect.)",
                     option = "mako",
                         # trim extreme high values to make spatial variation more visible
                     na.value = "black", limits = c(0, quantile(filter(cod_pel, year < 2020)$cod_her_ovr_sd, 0.999)))

ggsave(paste0(home, "/figures/supp/her_overlap_space_sd.pdf"), width = 17, height = 17, units = "cm")


# Saduria
plot_map_fc + 
  geom_raster(data = cod_ben |> filter(year < 2020 & quarter == 4),
              aes(X*1000, Y*1000, fill = cod_sad_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(name = "Cod-Saduria overlap", trans = "sqrt", option = "mako")

ggsave(paste0(home, "/figures/supp/sad_overlap_space_q4.pdf"), width = 17, height = 17, units = "cm")

p3 <- plot_map_fc + 
  geom_raster(data = cod_ben |> filter(year %in% c(2000, 2019) & quarter == 4),
              aes(X*1000, Y*1000, fill = cod_sad_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(name = "Cod-Saduria overlap", trans = "sqrt", option = "mako")


plot_map_fc + 
  geom_raster(data = cod_ben |> filter(year < 2020 & quarter == 1),
              aes(X*1000, Y*1000, fill = cod_sad_ovr)) +
  facet_wrap(~year) + 
  scale_fill_viridis(name = "Cod-Saduria overlap", trans = "sqrt", option = "mako")

ggsave(paste0(home, "/figures/supp/sad_overlap_space_q1.pdf"), width = 17, height = 17, units = "cm")

# Spatial overlap for all three species
p1 + p2 + p3
#ggsave(paste0(home, "/figures/overlap_all_2000_2019.pdf"), width = 23, height = 9, units = "cm")

# p1 / p2 / p3
# ggsave(paste0(home, "/figures/overlap_all_2000_2019.pdf"), width = 11, height = 22, units = "cm")

(p1 + facet_wrap(~year, ncol = 1)) + (p2  + facet_wrap(~year, ncol = 1)) + (p3  + facet_wrap(~year, ncol = 1)) +
  plot_annotation(tag_level = "A") & theme(legend.text = element_text(size = 6.5),
                                           legend.title = element_text(size = 9))

ggsave(paste0(home, "/figures/overlap_all_2000_2019.pdf"), width = 22, height = 12, units = "cm")
```

## Centre of gravity of overlap?

```{r}
spr_cog <- cod_pel |> 
  group_by(year) |> 
  summarise(Xw = weighted.mean(X, cod_spr_ovr),
            Yw = weighted.mean(Y, cod_spr_ovr)) |> 
  mutate(species = "Sprat")

her_cog <- cod_pel |> 
  group_by(year) |> 
  summarise(Xw = weighted.mean(X, cod_her_ovr),
            Yw = weighted.mean(Y, cod_her_ovr)) |> 
  mutate(species = "Herring")
  
sad_cog <- cod_ben |> 
  group_by(year) |> 
  summarise(Xw = weighted.mean(X, cod_sad_ovr),
            Yw = weighted.mean(Y, cod_sad_ovr)) |> 
  mutate(species = "Saduria")

cogs <- bind_rows(spr_cog, her_cog, sad_cog)

plot_map_fc + 
  geom_point(data = cogs, aes(Xw*1000, Yw*1000, color = year), size = 0.6) + 
  geom_line(data = cogs, aes(Xw*1000, Yw*1000, color = year), linewidth = 0.3) + 
  facet_wrap(~factor(species, levels = c("Sprat", "Herring", "Saduria"))) + 
  labs(color = "Year")

ggsave(paste0(home, "/figures/cogs.pdf"), width = 17, height = 9, units = "cm")
```

Plot overlap over time

```{r}
pel_annual <- cod_pel |> 
  group_by(year) |> 
  summarise(cod_spr_ovr_tot = sum(cod_spr_ovr),
            cod_spr_ovr_sd_tot = sum(cod_spr_ovr_sd),
            cod_her_ovr_tot = sum(cod_her_ovr),
            cod_her_ovr_sd_tot = sum(cod_her_ovr_sd)) |> 
  pivot_longer(c("cod_spr_ovr_tot", "cod_spr_ovr_sd_tot", "cod_her_ovr_tot", "cod_her_ovr_sd_tot")) |> 
  mutate(Species = ifelse(name %in% c("cod_spr_ovr_tot", "cod_spr_ovr_sd_tot"), "Sprat", "Herring")) |> 
  mutate(Scale = ifelse(name %in% c("cod_her_ovr_sd_tot", "cod_spr_ovr_sd_tot"), "Subdivision", "ICES Rect."))

p1 <- ggplot(data = pel_annual, aes(year, value, color = Scale, fill = Scale)) +
  geom_point(alpha = 0.5) +
  geom_line(alpha = 0.5) + 
  geom_smooth(method = "gam", formula = y~s(x, k = 4), alpha = 0.2) + 
  scale_fill_brewer(palette = "Set1") +
  scale_color_brewer(palette = "Set1") +
  labs(x = "Year", y = "Overlap index") +
  facet_wrap(~ Species) +
  coord_cartesian(ylim = c(0.15, 0.8)) +
  theme(legend.position = c(0.6, 0.86))

p1
ggsave(paste0(home, "/figures/pelagic_overlap.pdf"), width = 17, height = 9, units = "cm")

# Saduria
p2 <- cod_ben_sum |> 
  mutate(quart_lab = ifelse(quarter == 1, "Quarter 1", "Quarter 4")) |> 
  ggplot(aes(year, cod_sad_ovr_tot, color = quart_lab, fill = quart_lab)) +
  geom_point(alpha = 0.5) +
  geom_line(alpha = 0.5) + 
  geom_smooth(method = "gam", formula = y~s(x, k = 4), alpha = 0.2) + 
  labs(x = "Year", y = "Overlap index", color = "", fill = "") +
  scale_fill_brewer(palette = "Set1") +
  scale_color_brewer(palette = "Set1") + 
  coord_cartesian(ylim = c(0.15, 0.8)) +
  theme(legend.position = c(0.8, 0.15))

p2

ggsave(paste0(home, "/figures/saduria_overlap.pdf"), width = 11, height = 9, units = "cm")

# Combined plot
p1 + p2 + plot_annotation(tag_levels = "A") + plot_layout(widths = c(2, 1))

ggsave(paste0(home, "/figures/annual_overlap2.pdf"), width = 17, height = 9, units = "cm")

annual_ovr <- bind_rows(pel_annual |> filter(Scale == "ICES Rect."),
                        cod_ben_sum |> filter(quarter == 4) |>
                          rename(value = cod_sad_ovr_tot) |> 
                          mutate(name = "cod_sad_ovr_tot", 
                                 Species = "Saduria"))

p3 <- ggplot(data = annual_ovr, aes(year, value)) +
  geom_point(alpha = 0.7) + 
  geom_smooth(method = "gam", formula = y~s(x, k = 4), alpha = 0.2, color = "steelblue") + 
  scale_fill_brewer(palette = "Set1") +
  scale_color_brewer(palette = "Set1") +
  labs(x = "Year", y = "Overlap index") +
  facet_wrap(~factor(Species, levels = c("Sprat", "Herring", "Saduria"))) +
  theme(legend.position = c(0.6, 0.86))

p3

ggsave(paste0(home, "/figures/annual_overlap2.pdf"), width = 17, height = 7, units = "cm")
```

