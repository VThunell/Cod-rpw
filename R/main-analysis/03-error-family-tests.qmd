---
title: "Feeding ratio. Observation error families and fr cutoffs and fr transformations"
author: "Viktor Thunell"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## 1 Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
devtools::source_url("https://raw.githubusercontent.com/VThunell/Lammska_cod-fr/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")
#remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()

set.seed(123)
```

## 2 Read data

```{r}
#| message: false
#| warning: false

df <- read_csv(paste0(home, "/data/clean/stomachs.csv")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         year_f = as.factor(year),
         month_f = as.factor(month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length),
         doy_sc = ifelse(!is.na(day_of_year), (day_of_year - mean(day_of_year, na.rm = TRUE))/sd(day_of_year, na.rm = TRUE), NA)) |> 
  rowwise() |> 
  mutate(tot = sum(other_or_NA, other_invert, benth_fish, other_fish, saduria, sprat, herring)
)

glimpse(df)

```

## 3 Data and Feeding ratio cutoff values... 

Sometimes stomachs are very full in relation to predator weight and sometimes atocahs are almost empty. The fr_tot thus has  tails and these differ between left and right. The data is likely littered with errors on both prey and predator weights which affects feeding ratios and creates outliers. How do we cutoff data on feeding ratios?


```{r 95 vs 99.9 percetile }
dft <- df |>
 filter( fr_tot > 0, # remove empties
         !is.na(day_of_year))
  
min(dft$fr_tot)  # a one kilo cod eating a 0.001 gram plankton is not unlikely. 
quantile(dft$fr_tot, 0.001)
mean(dft$fr_tot)
quantile(dft$fr_tot, 0.999)

#filter
dft_5 <- dft |>
  filter(between(fr_tot, quantile(dft$fr_tot, .05), quantile(dft$fr_tot, .95)))
dft_5_top <- dft |>
  filter(fr_tot < quantile(dft$fr_tot, .95))
dft_01 <- dft |>
  filter(between(fr_tot, quantile(dft$fr_tot, .001), quantile(dft$fr_tot, .999)))

# all data betwen 0 and 1
dft |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  #geom_boxplot() +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free") 

# data between 0.05 and 0.95 percentile
dft_5 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

# data between 0.001 and 0.999 percentile
dft_01 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

```

# 4 No transformation of response 
Models are spatial as non-spatial models sometimes won't converge

## Gamma model 
```{r gamma no trans}

# missing years for spatial models
my <- min(dft$year):max(dft$year)
missing_years <- my[!my %in% unique(dft$year)]

# 5 percentiles model
mesh5 <- make_mesh(dft_5, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 5 percentile top model
mesh5_top <- make_mesh(dft_5_top, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5_top,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 0.1 percentiles model
mesh01 <- make_mesh(dft_01, c("X", "Y"), cutoff = 6)

gamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

sanity(gamma_Mod_n_5)
sanity(gamma_Mod_n_5_top)
sanity(gamma_Mod_n_01)

AIC(gamma_Mod_n_5)
AIC(gamma_Mod_n_5_top)
AIC(gamma_Mod_n_01)

res_gamma_Mod_n_5 <- mcmc_res <- residuals(gamma_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_5_top <- mcmc_res <- residuals(gamma_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_01 <- mcmc_res <- residuals(gamma_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

ggr_df <- bind_rows(tibble(res = res_gamma_Mod_n_5,  typer = "mcmc_5"),
                    tibble(res = residuals(gamma_Mod_n_5),  typer = "reg_5"),
                    tibble(res = res_gamma_Mod_n_01,  typer = "mcmc_5_top"),
                    tibble(res = residuals(gamma_Mod_n_01),  typer = "reg_5_top"),
                    tibble(res = res_gamma_Mod_n_01,  typer = "mcmc_01"),
                    tibble(res = residuals(gamma_Mod_n_01),  typer = "reg_01"))

ggr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "Gamma")

ggr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "Gamma residuals")

```
The exclusion of data affects the fit, either the high (0.1 % cut off) or low (5% cut off) values of fr are underestimated. The residual type has a small effect. 

## Lognormal 
Now compare with lognormal...

```{r lognormal no trans}

logn_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

logn_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5_top,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

logn_Mod_n_01 <- 
  sdmTMB(
  data = dft_01,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

sanity(logn_Mod_n_5)
sanity(logn_Mod_n_5_top)
sanity(logn_Mod_n_01)

AIC(logn_Mod_n_5)
AIC(logn_Mod_n_5_top)
AIC(logn_Mod_n_01)

res_logn_Mod_n_5 <- mcmc_res <- residuals(logn_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_5_top <- mcmc_res <- residuals(logn_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_01 <- mcmc_res <- residuals(logn_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

lngr_df <- bind_rows(tibble(res = res_logn_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(logn_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_logn_Mod_n_5_top,  typer = "mcmc_5_top"),
                   tibble(res = residuals(logn_Mod_n_5_top),  typer = "reg_5_top"),
                   tibble(res = res_logn_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(logn_Mod_n_01),  typer = "reg_01"))

lngr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "lognormal")

lngr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "lognormal residuals")

```
The exclusion of data affects the fit also for the lognormal. 

## What about generalized gamma?

```{r gengamma no trans}

gengamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

gengamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

sanity(gengamma_Mod_n_5)
sanity(gengamma_Mod_n_01)

AIC(gengamma_Mod_n_5)
AIC(gengamma_Mod_n_01)

# Dharma simulations based residulas are currently the only option for gengamma family. 
simulate(gengamma_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_5)
simulate(gengamma_Mod_n_01, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_01)

```

The residuals looks relatively great for the gengamma. A small difference between the dut off in favor of 5% but 0.1% may be more straightforward. 

# 5 Compare dharma residuals between families

The gengamma seemingly provides a good fit but the dharma residulas doesnt seem to capture the tails in the observations. So I cant tell if the gengamma is a better option than lognormal or gamma. The generalised gamma has better qq plots than the gamma and lognormal.

```{r}
gengamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

gamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

logn_Mod_n_5 <-
  sdmTMB(
  data = dft_5,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

simulate(gamma_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gamma_Mod_n_5)
text(x = 0.2, y = 0.7, label = "gamma dharma")
simulate(logn_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(logn_Mod_n_5)
text(x = 0.2, y = 0.7, 
     label = "lognormal dharma")
simulate(gengamma_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals( gengamma_Mod_n_5)
text(x = 0.2, y = 0.7, 
     label = "gengamma dharma")

qqnorm(res_gamma_Mod_n_5)
qqline(res_gamma_Mod_n_5)
text(x = -3, y = 3, 
     label = "gamma mcmc")
qqnorm(res_logn_Mod_n_5)
qqline(res_logn_Mod_n_5)
text(x = -3, y = 3, 
     label = "lognormal mcmc")

```

# 6 Square root transformation of the feeding ratio response 

```{r sqrt}

#filter
dft_5_sqrt <- dft_5 |> #hmm, remove perc:s before or after the trans? I´ll for before and just create the transf.
  mutate(fr_tot_sq = sqrt(fr_tot))
dft_5_top_sqrt <- dft_5_top |>
  mutate(fr_tot_sq = sqrt(fr_tot))
dft_01_sqrt <- dft_01 |>
  mutate(fr_tot_sq = sqrt(fr_tot)) 

# all data betwen 0 and 1
dft |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(sqrt(value))) +
  #geom_boxplot() +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free") 

# data between 0.05 and 0.95 percentile
dft_5 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(sqrt(value))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

# data between 0.001 and 0.999 percentile
dft_01 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(value^(1/3))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

```

## Gamma model and sqrt of response
```{r gamma sqrt}

# 95th percentile model
# mesh for all sqrt models
mesh5 <- make_mesh(dft_5_sqrt, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 5 percentile top model
mesh5_top <- make_mesh(dft_5_top_sqrt, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5_top,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 99.9th percentile model
mesh01 <- make_mesh(dft_01_sqrt, c("X", "Y"), cutoff = 6)

gamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

sanity(gamma_Mod_n_5)
sanity(gamma_Mod_n_5_top)
sanity(gamma_Mod_n_01)

AIC(gamma_Mod_n_5)
AIC(gamma_Mod_n_5_top)
AIC(gamma_Mod_n_01)

res_gamma_Mod_n_5 <- mcmc_res <- residuals(gamma_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_5_top <- mcmc_res <- residuals(gamma_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_01 <- mcmc_res <- residuals(gamma_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

ggr_df <- bind_rows(tibble(res = res_gamma_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(gamma_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_gamma_Mod_n_5_top,  typer = "mcmc_5_top"),
                   tibble(res = residuals(gamma_Mod_n_5_top),  typer = "reg_5_top"),
                   tibble(res = res_gamma_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(gamma_Mod_n_01),  typer = "reg_01"))

ggr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "Gamma")

ggr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "Gamma residuals")

```
The exclusion of data affects the fit, either the high (0.1 % cut off) or low (5% cut off) values of fr are underestimated. The residual type has a small effect

## Lognormal 
Now compare with lognormal with sqrt transformation...

```{r lognormal sqrt}

logn_Mod_n_5 <-
  sdmTMB(
  data = dft_5_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

logn_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5_top,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

logn_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

sanity(logn_Mod_n_5)
sanity(logn_Mod_n_5_top)
sanity(logn_Mod_n_01)

AIC(logn_Mod_n_5)
AIC(logn_Mod_n_5_top)
AIC(logn_Mod_n_01)

res_logn_Mod_n_5 <- mcmc_res <- residuals(logn_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_5_top <- mcmc_res <- residuals(logn_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_01 <- mcmc_res <- residuals(logn_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

lngr_df <- bind_rows(tibble(res = res_logn_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(logn_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_logn_Mod_n_5_top,  typer = "mcmc_5_top"),
                   tibble(res = residuals(logn_Mod_n_5_top),  typer = "reg_5_top"),
                   tibble(res = res_logn_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(logn_Mod_n_01),  typer = "reg_01"))

lngr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "sqrt trans, lognormal")

lngr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "sqrt trans, lognormal residuals")

```
The exclusion of data affects the fit also for the lognormal. 

## What about generalized gamma for sqrt transformation?

```{r gengamma sqrt}

gengamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

gengamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_sqrt,
  formula = fr_tot_sq ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

sanity(gengamma_Mod_n_5)
sanity(gengamma_Mod_n_01)

AIC(gengamma_Mod_n_5)
AIC(gengamma_Mod_n_01)

# Dharma simulations based residulas are currently the only option for gengamma family. 
simulate(gengamma_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_5)
simulate(gengamma_Mod_n_01, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_01)

```


# 7 Cube root transformation of the feeding ratio response 

```{r cube}

#filter
dft_5_cube <- dft_5 |> #hmm, remove perc:s before or after the trans? I´ll for before and just create the transf.
  mutate(fr_tot_cube = fr_tot^(1/3))
dft_5_top_cube <- dft_5_top |>
  mutate(fr_tot_cube = fr_tot^(1/3))
dft_01_cube <- dft_01 |>
  mutate(fr_tot_cube = fr_tot^(1/3))

# all data betwen 0 and 1
dft |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(value^(1/3))) +
  #geom_boxplot() +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free") 

# data between 0.05 and 0.95 percentile
dft_5 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(value^(1/3))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

# data between 0.001 and 0.999 percentile
dft_01 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  filter(between(fr_tot, quantile(fr_tot, .001), quantile(fr_tot, .999))) |>
  pivot_longer(everything()) |> 
  ggplot(aes(value^(1/3))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

```

## Gamma model and cube of response
```{r gamma cube}

# 95th percentile model
# mesh for all cube models
mesh <- make_mesh(dft_5_cube, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 95th top percentile model
mesh01 <- make_mesh(dft_5_top_cube, c("X", "Y"), cutoff = 6)

gamma_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 99.9th percentile model
mesh01 <- make_mesh(dft_01_cube, c("X", "Y"), cutoff = 6)

gamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

sanity(gamma_Mod_n_5)
sanity(gamma_Mod_n_5_top)
sanity(gamma_Mod_n_01)

AIC(gamma_Mod_n_5)
AIC(gamma_Mod_n_5_top)
AIC(gamma_Mod_n_01)

res_gamma_Mod_n_5 <- mcmc_res <- residuals(gamma_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_5_top <- mcmc_res <- residuals(gamma_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_gamma_Mod_n_01 <- mcmc_res <- residuals(gamma_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

ggr_df <- bind_rows(tibble(res = res_gamma_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(gamma_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_gamma_Mod_n_5_top,  typer = "mcmc_5_top"),
                   tibble(res = residuals(gamma_Mod_n_5_top),  typer = "reg_5_top"),
                   tibble(res = res_gamma_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(gamma_Mod_n_01),  typer = "reg_01"))

ggr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "cube Gamma")

ggr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "cube Gamma residuals")


```


## Lognormal 
Now compare with lognormal with cube transformation...

```{r lognormal cube}

# 99.9th percentile model
mesh <- make_mesh(dft_01_cube, c("X", "Y"), cutoff = 6)

logn_Mod_n_5 <-
  sdmTMB(
  data = dft_5_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

# 5 percentile top model
mesh5_top <- make_mesh(dft_5_top_cube, c("X", "Y"), cutoff = 6)

logn_Mod_n_5_top <- 
  sdmTMB(
  data = dft_5_top_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5_top,
  spatial = "on",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

logn_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

sanity(logn_Mod_n_5)
sanity(logn_Mod_n_5_top)
sanity(logn_Mod_n_01)

AIC(logn_Mod_n_5)
AIC(logn_Mod_n_5_top)
AIC(logn_Mod_n_01)

res_logn_Mod_n_5 <- mcmc_res <- residuals(logn_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_5_top <- mcmc_res <- residuals(logn_Mod_n_5_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_5_top, mcmc_iter = 201, mcmc_warmup = 200))
res_logn_Mod_n_01 <- mcmc_res <- residuals(logn_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(logn_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

lngr_df <- bind_rows(tibble(res = res_logn_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(logn_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_logn_Mod_n_5_top,  typer = "mcmc_5_top"),
                   tibble(res = residuals(logn_Mod_n_5_top),  typer = "reg_5_top"),
                   tibble(res = res_logn_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(logn_Mod_n_01),  typer = "reg_01"))

lngr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "cube trans, lognormal")

lngr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "cube trans, lognormal residuals")

```
The exclusion of data affects the fit also for the lognormal. 

## What about generalized gamma for cube transformation?

```{r gengamma cube}

gengamma_Mod_n_5 <-
  sdmTMB(
  data = dft_5_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

gengamma_Mod_n_01 <- 
  sdmTMB(
  data = dft_01_cube,
  formula = fr_tot_cube ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = gengamma(link = "log")
)

sanity(gengamma_Mod_n_5)
sanity(gengamma_Mod_n_01)

AIC(gengamma_Mod_n_5)
AIC(gengamma_Mod_n_01)

# Dharma simulations based residulas are currently the only option for gengamma family. 
simulate(gengamma_Mod_n_5, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_5)
simulate(gengamma_Mod_n_01, nsim = 1000, type = "mle-mvn") |>
  dharma_residuals(gengamma_Mod_n_01)

```


# 8 Log transformation of response

```{r log}

#filter
dft_5_log <- dft_5 |> #hmm, remove perc:s before or after the trans? I´ll for before and just create the transf.
  mutate(fr_tot_log = log(fr_tot))
dft_01_log <- dft_01 |>
  mutate(fr_tot_log = log(fr_tot)) 

# all data betwen 0 and 1
dft |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  #geom_boxplot() +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free") 

# data between 0.05 and 0.95 percentile
dft_5 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

# data between 0.001 and 0.999 percentile
dft_01 |>
  dplyr::select(fr_sad, fr_spr, fr_her, fr_tot, fr_other_or_NA, fr_other_invert, fr_benth_fish) |> 
  filter(between(fr_tot, quantile(fr_tot, .001), quantile(fr_tot, .999))) |>
  pivot_longer(everything()) |> 
  ggplot(aes(log(value))) +
  geom_histogram(bins = 100) +
  facet_wrap(~name, ncol = 2, scales = "free")

```

## Gaussian
Now compare with lognormal with log transformation...

```{r normal log}

gauss_Mod_n_5 <-
  sdmTMB(
  data = dft_5_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = gaussian()
)

gauss_Mod_n_01 <-
  sdmTMB(
  data = dft_01_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = gaussian()
)

sanity(gauss_Mod_n_5)
sanity(gauss_Mod_n_01)

AIC(gauss_Mod_n_5)
AIC(gauss_Mod_n_01)

res_gauss_Mod_n_5 <- mcmc_res <- residuals(gauss_Mod_n_5, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gauss_Mod_n_5, mcmc_iter = 201, mcmc_warmup = 200))
res_gauss_Mod_n_01 <- mcmc_res <- residuals(gauss_Mod_n_01, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gauss_Mod_n_01, mcmc_iter = 201, mcmc_warmup = 200))

gaugr_df <- bind_rows(tibble(res = res_gauss_Mod_n_5,  typer = "mcmc_5"),
                   tibble(res = residuals(gauss_Mod_n_5),  typer = "reg_5"),
                   tibble(res = res_gauss_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(gauss_Mod_n_01),  typer = "reg_01"))

gaugr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "gaussian")

gaugr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "gaussian")

```

Ok. Sort of the lognormal glm with 0.1% of the darta removed. 

## Student
Now compare with lognormal with log transformation...

```{r student log}

stud_Mod_n_5_df3 <-
  sdmTMB(
  data = dft_5_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh5,
  spatial = "off",
  spatiotemporal = "off",
  family = student(df=3)
)

stud_Mod_n_01_df3 <-
  sdmTMB(
  data = dft_01_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = student(df=3)
)

stud_Mod_n_01_df9 <-
  sdmTMB(
  data = dft_01_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = student(df=9)
)

stud_Mod_n_01_df27 <-
  sdmTMB(
  data = dft_01_log,
  formula = fr_tot_log ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh01,
  spatial = "off",
  spatiotemporal = "off",
  family = student(df=27)
)

sanity(stud_Mod_n_5_df3)
sanity(stud_Mod_n_01_df3)
sanity(stud_Mod_n_01_df9)
sanity(stud_Mod_n_01_df27)
AIC(stud_Mod_n_5_df3)
AIC(stud_Mod_n_01_df3)
AIC(stud_Mod_n_01_df9)
AIC(stud_Mod_n_01_df27)

res_stud_Mod_n_5_df3 <- mcmc_res <- residuals(stud_Mod_n_5_df3, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(stud_Mod_n_5_df3, mcmc_iter = 201, mcmc_warmup = 200))
res_stud_Mod_n_01_df3 <- mcmc_res <- residuals(stud_Mod_n_01_df3, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(stud_Mod_n_01_df3, mcmc_iter = 201, mcmc_warmup = 200))
res_stud_Mod_n_01_df9 <- mcmc_res <- residuals(stud_Mod_n_01_df9, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(stud_Mod_n_01_df9, mcmc_iter = 201, mcmc_warmup = 200))
res_stud_Mod_n_01_df27 <- mcmc_res <- residuals(stud_Mod_n_01_df27, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(stud_Mod_n_01_df27, mcmc_iter = 201, mcmc_warmup = 200))

stugr_df <- bind_rows(tibble(res = res_stud_Mod_n_5_df3,  typer = "mcmc_5"),
                      tibble(res = residuals(stud_Mod_n_5_df3),  typer = "reg_5"),
                      tibble(res = res_stud_Mod_n_01_df3,  typer = "mcmc_01_df3"),
                      tibble(res = residuals(stud_Mod_n_01_df3),  typer = "reg_01_df3"),
                      tibble(res = res_stud_Mod_n_01_df9,  typer = "mcmc_01_df9"),
                      tibble(res = residuals(stud_Mod_n_01_df9),  typer = "reg_01_df9"),
                      tibble(res = res_stud_Mod_n_01_df27,  typer = "mcmc_01_df9"),
                      tibble(res = residuals(stud_Mod_n_01_df27),  typer = "reg_01_df27"))

stugr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer, ncol = 3) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "student")

stugr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "student")

```


# 9 Boxcox transformation

Either a normal linear model with a boxcox or a glm with log link. I dotn think the Boxcox trans will provide anything new. https://eprints.lse.ac.uk/103537/1/StatSciV4.pdf

```{r}
library(MASS)
#b <- boxcox(lm(dft_01$fr_tot ~ 1))
#lam <- b$x[which.max(b$y)]

```

# 10 Model formulation alternatives with transformed data

```{r gauss log}

gauss_tr1 <-
  sdmTMB(
  data = dft_01_log,
  formula = fr_tot_log ~ 0 + year_f,
  time = "year",
  mesh = mesh01,
  spatial = "on",
  spatiotemporal = "off",
  family = gaussian()
)

sanity(gauss_tr1)
AIC(gauss_tr1)

res_gauss_tr1 <- mcmc_res <- residuals(gauss_tr1, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gauss_tr1, mcmc_iter = 201, mcmc_warmup = 200))

gaugr_df <- bind_rows(tibble(res = res_gauss_tr1, typer = "mcmc_5"),
                   #tibble(res = residuals(gauss_tr1),  typer = "reg_5"),
                   #tibble(res = res_gauss_Mod_n_01,  typer = "mcmc_01"),
                   tibble(res = residuals(gauss_tr1),  typer = "reg_01"))

gaugr_df |> 
  ggplot( aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "gaussian")

gaugr_df |> 
  ggplot(aes(res)) +
  geom_histogram(bins = 100) +
  facet_wrap(~typer) +
  labs(title = "gaussian")

```


# 11 Summary

Two options have provided decent fits so far. 1) Exclude values above 95% percentile and use gamma. This was a good option before cleaning the data once more. If additional re-claening would change this, I think it would be an ok option as the minimum fr value is reasonable (~1e-6)- there is naturally common low stomach content weights approaching the minimum of zero. This is not the case for a maximum fr which we dont know the value of (how much fits a cod stomach before its full?) and very high fr values are rare. 2) Generalised gamma including most data, e.g. only below 99.9% percentile. This makes a great fit according to the qq, better than for gamma or lognormal but whether the simulation based reiduals are reliable or not I dont know. 

From the above tests we learn that the fr data has a left and a right tail and is positively skewed. 

# Appendix. Cherry picking model selection 
The square root transformation (and even more so the cube transformation) makes small values relatively larger which deals with the left tail and reduces the right skew. The right tail can be cut off by excluding less than 5% but more than 0.1%, e.g. 1% but keeping the lower values. In that case, the Gamma should work better than the lognormal (see section 4-6). With this logic and the ecological motivation in the summary for removing high fr outliers, we should get the best possible qq-plot if that's what we´re after. The result:

```{r cherry pick}
dft_1_top_sqrt <- dft |>
  filter(fr_tot < quantile(dft$fr_tot, .99)) |>
  mutate(fr_tot_sqrt = fr_tot^(1/2))

mesh1 <- make_mesh(dft_1_top_sqrt, c("X", "Y"), cutoff = 6)

gamma_sqrt_1_top <-
  sdmTMB(
  data = dft_1_top_sqrt,
  formula = fr_tot_sqrt ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh1,
  spatial = "off",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

sanity(gamma_sqrt_1_top)

res_gamma_sqrt_1_top <- mcmc_res <- residuals(gamma_sqrt_1_top, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(gamma_sqrt_1_top, mcmc_iter = 201, mcmc_warmup = 200))

qqnorm(res_gamma_sqrt_1_top)
qqline(res_gamma_sqrt_1_top)
qqnorm(residuals(gamma_sqrt_1_top))
qqline(residuals(gamma_sqrt_1_top))

hist(residuals(gamma_sqrt_1_top), breaks = 100)
```

