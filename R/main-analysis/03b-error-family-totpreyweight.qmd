---
title: "Total prey weight. Observation error families and feeding ratio cutoffs"
author: "Viktor Thunell"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: false
---

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
devtools::source_url("https://raw.githubusercontent.com/VThunell/Lammska_cod-fr/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")
#remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()

```

### Read data

```{r}
#| message: false
#| warning: false

df <- read_csv(paste0(home, "/data/clean/stomachs.csv")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         herring_sc = (herring - mean(herring))/sd(herring),
         saduria_sc = (saduria - mean(saduria))/sd(saduria),          
         sprat_sc = (sprat - mean(sprat))/sd(sprat),
         other_invert_sc = (other_invert - mean(other_invert))/sd(other_invert),
         other_sc = (other - mean(other))/sd(other),
         other_fish_sc = (other_fish - mean(other_fish))/sd(other_fish),
         benth_fish_sc = (benth_fish - mean(benth_fish))/sd(benth_fish),
         year_f = as.factor(year),
         month_f = as.factor(month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length),
         doy_sc = ifelse(!is.na(day_of_year), (day_of_year - mean(day_of_year, na.rm = TRUE))/sd(day_of_year, na.rm = TRUE), NA)) |> 
  rowwise() |> 
  mutate(tot = sum(other, other_invert, benth_fish, other_fish, saduria, sprat, herring))

glimpse(df)

```

## Background

We need to cut off the feeding rations to remove likely erroneous data. The feeding ratios can however be high, fish can eat big prey. So where do we place the cutoff? And which of gamma and lognormal best represent the data?

```{r}

df_tot <- df |>
  filter( !is.na(day_of_year),
          fr_tot > 0,
          tot > 0)

# below fr = 1
df_tot |>
  dplyr::select(tot) |>
  ggplot(aes(tot)) +
  geom_histogram(bins = 100)

# below fr = 0.11,
df_tot |>
  filter( fr_tot <= .11) |>
  dplyr::select(tot) |>
  ggplot(aes(tot)) +
  geom_histogram(bins = 100)

df_tot |>
  filter( fr_tot <= 0.5) |>
  rowwise() |> 
  mutate(decade = round(year/10) * 10) |>
  ggplot(aes(pred_length_sc, tot, color = decade)) +
  geom_point() +
  labs(title = "fr > 0.5") +
  stat_smooth(method = "gam", formula = y ~ s(x, k=3))

```

## Gamma and feeding ratio cutoff values...

Fit with gamma. Sometimes stomachs are very full in relation to predator weight. The fr_tot thus has a long tail and the the fitted vs predicted quantiles depends on choice of cutoff for fr.

```{r gamma 95 vs 99}

mesh_tot_w <- make_mesh(df_tot, c("X", "Y"), cutoff = 6)

quantile(df_tot$fr_tot, 0.95) 
# # remove feeding ratios above the 95th percentile 
df_95 <- df_tot |>
  filter(fr_tot <= 0.11)

quantile(df_tot$fr_tot, 0.99) 
# # remove feeding ratios above the 99th percentile 
df_99 <- df_tot |>
  filter(fr_tot <= 0.37)

df_99 |>
  dplyr::select(tot) |>
  ggplot(aes(tot)) +
  geom_histogram(bins = 100)
 
# 95th percentile model
mesh <- make_mesh(df_95, c("X", "Y"), cutoff = 6)
# missing years
my <- min(df_95$year):max(df_95$year)
missing_years <- my[!my %in% unique(df_95$year)]

Mod_n_95 <- 
  sdmTMB(
  data = df_95,
  formula = tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh,
  spatial = "off",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

# 99th percentile model
mesh <- make_mesh(df_99, c("X", "Y"), cutoff = 6)
# missing years
my <- min(df_99$year):max(df_99$year)
missing_years <- my[!my %in% unique(df_99$year)]

Mod_n_99 <- 
  sdmTMB(
  data = df_99,
  formula = tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh,
  spatial = "off",
  spatiotemporal = "off",
  family = Gamma(link = "log")
)

sanity(Mod_n_95)
sanity(Mod_n_99)

AIC(Mod_n_95)
AIC(Mod_n_99)

res_Mod_n_95 <- residuals(Mod_n_95, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(Mod_n_95, mcmc_iter = 201, mcmc_warmup = 200))
res_Mod_n_99 <- residuals(Mod_n_99, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(Mod_n_99, mcmc_iter = 201, mcmc_warmup = 200))

gr_df <- bind_rows(data_frame(res = residuals(Mod_n_95, "mle-mcmc", mcmc_samples = res_Mod_n_95),  typer = "mcmc_95"),
                  data_frame(res = residuals(Mod_n_99, "mle-mcmc", mcmc_samples = res_Mod_n_99),  typer = "mcmc_99"),
                  data_frame(res = residuals(Mod_n_95),  typer = "reg_95"),
                  data_frame(res = residuals(Mod_n_99),  typer = "reg_99"))

# NOTE, 2.3 % infinite values 
length(which(is.infinite(r_df$res)))/length(r_df$res)

ggplot(gr_df, aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer, ncol = 2) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles",  title = "Gamma")
 
```

## Lognormal 
Now compare with lognormal...


```{r lognormal 95 vs 99}
# remove empty stomachs for fr-tot model and shorten time series to redu e fiiting time

# 95th percentile model
mesh <- make_mesh(df_95, c("X", "Y"), cutoff = 6)
# missing years
my <- min(df_95$year):max(df_95$year)
missing_years <- my[!my %in% unique(df_95$year)]

Mod_n_95 <- 
  sdmTMB(
  data = df_95,
  formula = tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)

# 99th percentile model
mesh <- make_mesh(df_99, c("X", "Y"), cutoff = 6)
# missing years
my <- min(df_99$year):max(df_99$year)
missing_years <- my[!my %in% unique(df_99$year)]

Mod_n_99 <- 
  sdmTMB(
  data = df_99,
  formula = tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years,
  time = "year", 
  mesh = mesh,
  spatial = "off",
  spatiotemporal = "off",
  family = lognormal(link = "log")
)
sanity(Mod_n_95)
sanity(Mod_n_99)

AIC(Mod_n_95)
AIC(Mod_n_99)

res_Mod_n_95 <- residuals(Mod_n_95, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(Mod_n_95, mcmc_iter = 201, mcmc_warmup = 200))
res_Mod_n_99 <- residuals(Mod_n_99, type = "mle-mcmc", mcmc_samples =  sdmTMBextra::predict_mle_mcmc(Mod_n_99, mcmc_iter = 201, mcmc_warmup = 200))

lr_df <- bind_rows(data_frame(res = residuals(Mod_n_95, "mle-mcmc", mcmc_samples = res_Mod_n_95),  typer = "mcmc_95"),
                  data_frame(res = residuals(Mod_n_99, "mle-mcmc", mcmc_samples = res_Mod_n_99),  typer = "mcmc_99"),
                  data_frame(res = residuals(Mod_n_95),  typer = "reg_95"),
                  data_frame(res = residuals(Mod_n_99),  typer = "reg_99"))

# NOTE, no % infinite values 
length(which(is.infinite(r_df$res)))/length(r_df$res) * 100

ggplot(lr_df, aes(sample = res)) +
  stat_qq(shape = 1) +
  stat_qq_line() +
  facet_wrap(~typer, ncol = 2) +
  labs(y = "Sample Quantiles", x = "Theoretical Quantiles", title = "lognormal")

```


## Summary
Gamma 95 percentile looking at regular residuals looks best. For lognormal its mcmc 99. Both gamma and lognormal "95" has higher AIC than "99". If we want to look at most of the data, lognormal is the way to go. Using the gamma distribution, there are lots of infinite residuals values. 

