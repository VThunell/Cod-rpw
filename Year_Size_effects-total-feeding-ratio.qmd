---
title: "Year-length-effects_Feeding-ratio-total"
author: "Viktor (& Max)"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 80%
editor: source
execute: 
  echo: true
  eval: true
  cache: true
---

## Background

We want to understand how the effects of the length of the predator (cod) influences the total amount of food it has in its stomach and if this has changed over the course of the time series (1963-2022). Using two different models, we find that this effect depends on model configuration.
In the first model (M1f below), the effect of time (Year) has a ....

We test four different ways of modellkng this interaction between Year and predator lenngth (pred_length_sc) and compare 

Depending on model, either the predator length effect varying with year (M1, pred_length_sc) or the Year effect (in M2) is sucking up the trend (pardon my lack of correct lingo). 

## Load libraries

```{r libs}
#| message: false
#| warning: false
#| cache: false

# Load libraries, install if needed
pkgs <- c("tidyverse", "tidylog", "devtools", "sdmTMB", "sdmTMBextra", "terra", "mapplots",
          "viridis", "visreg", "modelr", "future", "kableExtra", "ggh4x", "patchwork") 

if(length(setdiff(pkgs,rownames(installed.packages()))) > 0){

    install.packages(setdiff(pkgs, rownames(installed.packages())), dependencies = T)
  
  }

invisible(lapply(pkgs, library, character.only = T))

# Import some plotting functions
# Source code for map plots
# You need:
# devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
 devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/map-plot.R")
options(ggplot2.continuous.colour = "viridis")
#remotes::install_github("pbs-assess/sdmTMBextra", dependencies = TRUE)

library(ggsidekick)
theme_set(theme_sleek())

# Set path
home <- here::here()

date <- Sys.Date() # for naming when saving objects
```

```{r load cache}
# To load entire cache in interactive r session, do: 
# qwraps2::lazyload_cache_dir(path = paste0(home, "/R/main-analysis/03-fit-diet-models_cache/html"))
```

## Read stomach data

```{r}
#| message: false
#| warning: false

df <- read_csv(paste0(home, "/data/clean/stomachs.csv")) |>
  mutate(depth_sc = (depth - mean(depth))/sd(depth),
         herring_sc = (herring - mean(herring))/sd(herring),
         saduria_sc = (saduria - mean(saduria))/sd(saduria),          
         sprat_sc = (sprat - mean(sprat))/sd(sprat),
         other_invert_sc = (other_invert - mean(other_invert))/sd(other_invert),
         other_sc = (other - mean(other))/sd(other),
         other_fish_sc = (other_fish - mean(other_fish))/sd(other_fish),
         benth_fish_sc = (benth_fish - mean(benth_fish))/sd(benth_fish),
         year_f = as.factor(Year),
         month_f = as.factor(Month),
         ices_rect = as.factor(ices_rect),
         pred_length_sc = (pred_length - mean(pred_length)) / sd(pred_length)) 

glimpse(df)

```


## Filter

```{r}

# remove empty stomachs 
df_noz <- df |>
 filter( fr_tot > 0 )

# remove na day of year if that is used as a predictor
df_noz_doy <- df_noz |>
  filter( !is.na(day_of_year) ) |>
  mutate(doy_sc = (day_of_year - mean(day_of_year))/sd(day_of_year)) # read_csv(paste0(home, "/data/clean/stomachs.csv")) |> summarise(mean = mean(pred_length))

# reduce number of years to reduce fitting time
df_noz_doy_sel <- df_noz_doy |> filter( Year %in% c(1982:2022))
mesh_nozdoy_sel <- make_mesh(df_noz_doy_sel, c("X", "Y"), cutoff = 6)

# missing years
my <- min(df_noz_doy_sel$Year):max(df_noz_doy_sel$Year)
missing_years <- my[!my %in% unique(df_noz_doy_sel$Year)]

```

# We suspect that the amount of food in relation to cod weight in stomachs is decreasing:

```{r}
df_noz_doy_sel |> 
  group_by(Year) |> 
  summarise(mean_fr_tot = mean(fr_tot),
            sd_fr_tot = sd(fr_tot)) |>
  ggplot(aes(Year, mean_fr_tot)) +
  geom_line() +
  geom_ribbon(aes(ymin = mean_fr_tot - sd_fr_tot, ymax = mean_fr_tot + sd_fr_tot), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) 

```

## Problem based on previous models (M1 and M2)

Year modeled as a fixed effect factor (M1) or a time varying intercept (M2)

```{r fit M1 and 2}

M1 <- 
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + as.factor(Year) + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 0 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

M2 <- 
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

sanity(M1)
sanity(M2)

qqnorm(residuals(M1))
qqline(residuals(M1))
qqnorm(residuals(M2))
qqline(residuals(M2))

M1
M2
```

```{r plot M1 and 2}

# coef est for predator length
pl_M1 <- as.list(M1$sd_report, "Estimate")
pls_M1 <- as.list(M1$sd_report, "Std. Error")

pl_M2 <- as.list(M2$sd_report, "Estimate")
pls_M2 <- as.list(M2$sd_report, "Std. Error")

ypl_M1 <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M1$b_rw_t, coef.se = pls_M1$b_rw_t, model = "M1")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,1,], model = "M2")

ypl_M12 <- bind_rows(ypl_M1, ypl_M2)                  

# Conditional effects of length varying with year
nd_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel$pred_length_sc), max(df_noz_doy_sel$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel$Year))
nd_length$depth_sc <- 0
nd_length$doy_sc <- 0

p_M1_length <- predict(M1, newdata = nd_length, se_fit = TRUE, re_form = NA)
p_M2_length <- predict(M2, newdata = nd_length, se_fit = TRUE, re_form = NA)

p_M1_length$model = "M1"
p_M2_length$model = "M2"

p_length <- bind_rows(p_M1_length, p_M2_length)

# Conditional effect of Year
nd_Year <- data.frame(Year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

p_M1_Year <- predict(M1, newdata = nd_Year, re_form = NA, se_fit = TRUE)
p_M2_Year <- predict(M2, newdata = nd_Year, re_form = NA, se_fit = TRUE)

p_M1_Year$model = "M1"
p_M2_Year$model = "M2"

p_Year <- bind_rows(pr_M1_Year, pr_M2_Year)

ypl_M12 |>
ggplot(aes(year, exp(coef.est), color = model)) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length") 

p_length |>
  filter(Year %in% seq(min(Year), max(Year), by = 5)) |>
  ggplot(aes(pred_length_sc, exp(est), group = as.factor(Year))) +
  facet_wrap(~model) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_Year |>
  ggplot(aes(Year, exp(est), color = model)) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylim(0,max(exp(p_Year$est) * 1.2)) # the cf gets very large for the missing year

```

The difference between M1 and M2 is not that big, aprt from thh cf:s, it's the variation around the year effect: A time varying intercept gets much less varriation than having factor(Year) as a fixed effect. 

## Model alterantives to M1 and M2

```{r Model}

# time <- Sys.time()
# 
# M1 <-  # This is as you seen it on friday 1 march
#   sdmTMB(
#   data = df_noz_doy_sel_M2,
#   formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
#   time_varying = ~ 1 + pred_length_sc,
#   extra_time = missing_years, 
#   time = "Year", 
#   mesh = mesh_nozdoy_sel_M2,
#   spatial = "on",
#   family = Gamma(link = "log"),
# )
# 
# Sys.time() - time 

M3a1 <- # factor year * pred_length, skip time varying and missing years
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + factor(Year) * pred_length_sc + s(doy_sc, bs = "cc") + depth_sc, 
  #time_varying = ~ 1 + pred_length_sc, 
  #extra_time = missing_years, 
  #time = "Year", 
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

M3a2 <- # pred_length * factor year, skip time varying and missing years
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + pred_length_sc * factor(Year) + s(doy_sc, bs = "cc") + depth_sc, 
  #time_varying = ~ 1 + pred_length_sc, 
  #extra_time = missing_years, 
  #time = "Year", 
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

M3b <-  # smooth on length (k = 3) by year. Warning: NA/NaN function evaluationWarning: NA/NaN function evaluationWarning: The model may not have converged: non-positive-definite Hessian matrix.
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + factor(Year) + s(doy_sc, bs = "cc") + depth_sc + s(pred_length_sc, k = 3, by = Year), 
  #time_varying = ~ 1,
  #extra_time = missing_years, 
  #time = "Year", 
  mesh = mesh_nozdoy_sel,
  spatial = "off",
  family = Gamma(link = "log"),
)

M3c <-  # mean as random factor instead of fixed
  sdmTMB(
  data = df_noz_doy_sel,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc + (1|year_f), 
  time_varying = ~ 0 + pred_length_sc,
  extra_time = missing_years, 
  time = "Year", 
  mesh = mesh_nozdoy_sel,
  spatial = "off", # It still fits a spatial model
  family = Gamma(link = "log"),
)

# The interaction with a smooth effect seemingly does'nt work. This prevents the model from finding Year.
# M3d <- # factor year * s(pred_length, k = 4). 
#   sdmTMB(
#   data = df_noz_doy_sel_M2,
#   formula = fr_tot ~ factor(Year) * s(pred_length_sc, k = 4) + s(doy_sc, bs = "cc") + depth_sc, 
#   #time_varying = ~ 1 + pred_length_sc, 
#   #extra_time = missing_years, 
#   #time = "Year", 
#   mesh = mesh_nozdoy_sel_M2,
#   spatial = "on",
#   family = Gamma(link = "log"),
# )

sanity(M2a) 
sanity(M2b) 
sanity(M2c)

qqnorm(residuals(M3a))
qqline(residuals(M3a))
qqnorm(residuals(M3b))
qqline(residuals(M3b))
qqnorm(residuals(M3c))
qqline(residuals(M3c))

# Only a and c left for comparison
M3a
M3b # Warning: Smoother fixed effect matrix names could not be retrieved. Thi smakes the smoother effect 
M3c

```



```{r plot M3 models}

# estimates for Year effects
y_M3a <- data.frame(Year = sort(unique(M3a$data$Year)), coef.est = tidy(M3a, effects = "fixed", conf.int = TRUE)$estimate[1:39], coef.se = tidy(M3a, effects = "fixed", conf.int = TRUE)$std.error[1:39], model = "M3a")
y_M3b <- data.frame(Year = sort(unique(M3b$data$Year)), coef.est = tidy(M3b, effects = "fixed", conf.int = TRUE)$estimate[1:39], coef.se = tidy(M3b, effects = "fixed", conf.int = TRUE)$std.error[1:39], model = "M3b")
y_M3c <- data.frame(Year = sort(unique(df_noz_doy_sel$Year)), coef.est = tidy(M3c, effects = "ran_vals", conf.int = TRUE)$estimate, coef.se = tidy(M3c, effects = "ran_vals", conf.int = TRUE)$std.error, model = "M3c")

y_M3a$model = "M3a"
y_M3b$model = "M3b"
y_M3c$model = "M3c"
y_M3 <- bind_rows(y_M3a,y_M3b,y_M3c)

# Conditional effect of Year. Cant predict over year when it is a random effect for some reason
# nd_M3a_Year <- data.frame(Year = sort(unique(M3a$data$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)
# nd_M3c_Year <- data.frame(Year = sort(unique(M3c$data$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)
# 
# p_M3a_Year <- predict(M3a, newdata = nd_M3a_Year, re_form = NA, se_fit = TRUE)
# p_M3c_Year <- predict(M3c, newdata = nd_M3c_Year, re_form = NA, se_fit = TRUE) # cant predict over year...
# p_M3a_Year$model = "M3a"
# p_M3a_Year$model = "M3a"
# p_M3_Year <- bind_rows(p_M3a_Year,ypl_M3c)

# Predator length effects varying with year
# M3a
M3a1_est <- tidy(M3a1, effects = "fixed", conf.int = TRUE)$estimate
M3a1_se <- tidy(M3a1, effects = "fixed", conf.int = TRUE)$std.error
# ypl_M3a1 <- data.frame(Year = sort(unique(M3a1$data$Year)), coef.est = c(M3a1_est[1] + M3a1_est[40], M3a1_est[1] + M3a1_est[40] + M3a1_est[42:79]), coef.se = c(M3a1_se[1], M3a1_se[42:79]), model = "M3a1")
ypl_M3a1 <- data.frame(Year = sort(unique(M3a1$data$Year)), coef.est = c(M3a1_est[1] + M3a1_est[40], M3a1_est[1] + M3a1_est[40] + M3a1_est[42:79]), coef.se = c(M3a1_se[1], M3a1_se[42:79]), model = "M3a1")

M3a2_est <- tidy(M3a2, effects = "fixed", conf.int = TRUE)$estimate
ypl_M3a2 <- data.frame(Year = sort(unique(M3a2$data$Year)), coef.est = c(M3a2_est[1] + M3a2_est[2], M3a2_est[1] + M3a2_est[2] + M3a2_est[42:79]), model = "M3a2")

ypl_comp_M3a <- bind_rows(ypl_M3a1[,c(1,2,4)], ypl_M3a2)

# M3c 
pl_M3c <- as.list(M3c$sd_report, "Estimate")
pls_M3c <- as.list(M3c$sd_report, "Std. Error")
M3c_est <- tidy(M3c, effects = "ran_vals", conf.int = TRUE)$estimate # random year effect 
M3c_se <- tidy(M3c, effects = "ran_vals", conf.int = TRUE)$std.error

ypl_M3c <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M3c$b_rw_t, coef.se = pls_M3c$b_rw_t, model = "M3c")








nd_length_M3c <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel$pred_length_sc), max(df_noz_doy_sel$pred_length_sc), length.out = 10),
  Year = sort(unique(M3c$data$Year)))
nd_length$depth_sc <- 0
nd_length$doy_sc <- 0

p_M3a_length <- predict(M3a, newdata = nd_length, se_fit = TRUE, re_form = NA)
p_M3c_length <- predict(M3c, newdata = nd_length_M3c, se_fit = TRUE, re_form = NA) # Error in `predict()`: ! `xy_cols` (the column names for the x and y coordinates) are not in `newdata`.

pl_M3a1 <- as.list(M3a$sd_report, "Estimate")
pls_M3a1 <- as.list(M3a$sd_report, "Std. Error")
pl_M3a2 <- as.list(M3a$sd_report, "Estimate")
pls_M3a2 <- as.list(M3a$sd_report, "Std. Error")
pl_M3b <- as.list(M3b$sd_report, "Estimate")
pls_M3b <- as.list(M3b$sd_report, "Std. Error")
pl_M3c <- as.list(M3c$sd_report, "Estimate")
pls_M3c <- as.list(M3c$sd_report, "Std. Error")

ypl_M3a1 <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M3a$b_rw_t, coef.se = pls_M3a$b_rw_t, model = "M3a1")


ypl_M3a2 <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M3a$b_rw_t, coef.se = pls_M3a$b_rw_t, model = "M3a2")
ypl_M3b <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M3b$b_rw_t, coef.se = pls_M3b$b_rw_t, model = "M3a")
ypl_M3c <- data.frame(year = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year)), coef.est = pl_M3c$b_rw_t, coef.se = pls_M3c$b_rw_t, model = "M3c")


pl_M3a <- data.frame(Year = sort(unique(M3a$data$Year)), coef.est = tidy(M3a, effects = "fixed", conf.int = TRUE)$estimate[1:39], coef.se = tidy(M3a, effects = "fixed", conf.int = TRUE)$std.error[1:39], model = "M3c")

pl_M3a <- data.frame(Year = sort(unique(M3a$data$Year)), coef.est = tidy(M3c, effects = "ran_vals", conf.int = TRUE)$estimate, coef.se = tidy(M3c, effects = "ran_vals", conf.int = TRUE)$std.error, model = "M3c")


p_M3a_length <- predict(M3a, newdata = nd_length, se_fit = TRUE, re_form = NA)
p_M3c_length <- predict(M3c, newdata = nd_length_M3c, se_fit = TRUE, re_form = NA)

p_M3a_length$model = "M3a"
p_M3c_length$model = "M3c"

p_M3_length <- bind_rows(p_M1_length, p_M2_length)

# plot year coef
y_M3 |>
  filter(model == "M3c") |>
  ggplot(aes(Year, exp(coef.est), color = model)) +
  geom_line() +
  #geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 20)) +
  ylab("fixed coefficient of year") +

# y_M3 |>
#   filter(model == "M3b") |>
#   ggplot(aes(Year, exp(coef.est), color = model)) +
#   geom_line() +
#   #geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
#   scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 20)) +
#   ylab("fixed coefficient of year") +

y_M3 |>
  filter(model == "M3a") |>
  ggplot(aes(Year, exp(coef.est), color = model)) +
  geom_line() +
 # geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 20)) +
  ylab("random estimate of year")

# plot comparison of M3a1 and 2 
ypl_comp_M3a |>
  ggplot(aes(Year, exp(coef.est), color = model, linetype = model)) +
  geom_line() +
  ggtitle(" order of interactive terms (a*b vs b*a) makes no difference")

# compare M3a and c

ypl_M3a1 |>
  ggplot(aes(Year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length") +

ypl_M3c |>
  ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length")




p_length |>
  filter(Year %in% seq(min(Year), max(Year), by = 5)) |>
  ggplot(aes(pred_length_sc, exp(est), group = as.factor(Year))) +
  facet_wrap(~model) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_Year |>
ggplot(aes(Year, exp(est), color = model)) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylim(0,max(exp(p_Year$est) * 1.2)) # the cf gets very large for the missing year

# To compare M3 with M1 and 2

bind_rows(ypl_M12,ypl_M3c, ypl_M3a) |>
ggplot(aes(year, exp(coef.est), color = model, linetype = model)) +
  geom_line() +
  #geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) +
  ylab("est for pred.length") 

#bind_rows(y_M3a,y_M3b,y_M3c,p_Year[,c(1,5:7)]) |>
 # filter(!model %in% c("M1", "M2")) |>
  y_M3 |>
  #p_Year |>
  ggplot(aes(Year, exp(est), color = model, linetype = model)) +
  geom_line() +
  #geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel$Year), max(df_noz_doy_sel$Year), by = 10)) 
  #ylim(0,max(exp(p_Year$est) * 1.2)) # the cf gets very large for the missing year

```
## Summary

 * M3a - 
 * M3b - The effect of a smoother on predator length varying with year (i.e. by = Year) cannot be estimated by the model( " Smoother fixed effect matrix names could not be retrieved"). There are more issue with the model (see above) and we nned to investigate this a bit if we want to do this model. Therefore I've dropped this option.
 * M3c - Having a predator length smoother varying with year generates a model with standard errors that may be large. The smoother term can't be put on time_varying (the function doesn't recognize the s() function). If time_varying is on but spatial is off, it fits a spatial model and asks for xy coordinates when I use predict(). I go with  
 * M3d - An interaction betwen Year and a smooth effect on pred_length_sc seemingly does'nt work. This prevents sdmTMB from finding Year. Therefore I've dropped this option.








### Conditional effects for model M2f

```{r cond effects for M2f}
M2f <- readRDS(M2f, file = paste0("lammska_M2f_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2f_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2f_length$depth_sc <- 0
nd_M2f_length$doy_sc <- 0

p_M2f_length <- predict(M2f, newdata = nd_M2f_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M2f_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2f_doy <- predict(M2f, newdata = nd_M2f_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2f_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2f_Year <- predict(M2f, newdata = nd_M2f_Year, re_form = NA, se_fit = TRUE)


# plots M2f
p_M2f_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

pr_M2f_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) +
  ylim(0,0.1) # the cf gets very large for the missing year

p_M2f_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

```

## Length coefficients over time
```{r pred length over time M2f}

pl_M2 <- as.list(M2f$sd_report, "Estimate")
pls_M2 <- as.list(M2f$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

# intercept <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```


## Next model, M2g. Adding spatial effects

```{r M2g fit}

time <- Sys.time()

M2g <- 
  sdmTMB(
  data = df_noz_doy_sel_M2,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc,
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel_M2,
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M2g) # b_j` gradient > 0.001

#M2g_res2 <- sdmTMBextra::predict_mle_mcmc(M2g, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M2g))
qqline(residuals(M2g))

M2g

saveRDS(M2g, file = paste0("lammska_M2g_",date,".rds"))

```

### M2g conditional effects

```{r M2g cond effects}
M2g <- readRDS(M2g, file = paste0("lammska_M2g_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2g_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2g_length$depth_sc <- 0
nd_M2g_length$doy_sc <- 0

p_M2g_length <- predict(M2g, newdata = nd_M2g_length, se_fit = TRUE, re_form = NA)


# Conditional effects of day of the year
nd_M2g_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2g_doy <- predict(M2g, newdata = nd_M2g_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2g_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2g_Year <- predict(M2g, newdata = nd_M2g_Year, re_form = NA, se_fit = TRUE)

p_M2g_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M2g_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M2g_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3)

```

# M2g predator lenght over time 
```{r pred length over time M2g}
M2g <- readRDS(M2g, file = paste0("lammska_M2f_",date,".rds"))

pl_M2 <- as.list(M2g$sd_report, "Estimate")
pls_M2 <- as.list(M2g$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl_M2$b_rw_t[,2,], coef.se = pls_M2$b_rw_t[,2,])

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```

## Next model, M2h, adding AR1 spatiotempral effects

```{r M2h fit}

time <- Sys.time()

M2h <- 
  sdmTMB(
  data = df_noz_doy_sel_M2,
  formula = fr_tot ~ 0 + s(doy_sc, bs = "cc") + depth_sc, 
  time_varying = ~ 1 + pred_length_sc, # implies time varying random walk intercept 
  extra_time = missing_years, # to fill in empty years
  time = "Year", # for spatiotemporal and time_varying
  mesh = mesh_nozdoy_sel_M2,
  spatiotemporal = "ar1",
  spatial = "on",
  family = Gamma(link = "log"),
)

Sys.time() - time 

sanity(M2h) # b_j` gradient > 0.001

#M2h_res2 <- sdmTMBextra::predict_mle_mcmc(M2h, mcmc_warmup = 200, mcmc_iter = 201)

qqnorm(residuals(M2h))
qqline(residuals(M2h))

M2h

saveRDS(M2h, file = paste0("lammska_M2h_",date,".rds"))

```

### Conditional effects for M2h

```{r M2h cond effects}
M2h <- readRDS(M2h, file = paste0("lammska_M2h_",date,".rds"))

# Conditional effects of predator length varying over time
nd_M2h_length <- expand.grid(
  pred_length_sc = seq(min(df_noz_doy_sel_M2$pred_length_sc), max(df_noz_doy_sel_M2$pred_length_sc), length.out = 50),
  Year = unique(df_noz_doy_sel_M2$Year))
nd_M2h_length$depth_sc <- 0
nd_M2h_length$doy_sc <- 0

p_M2h_length <- predict(M2h, newdata = nd_M2h_length, se_fit = TRUE, re_form = NA)


  # Conditional effects of day of the year
nd_M2h_doy <- data.frame(Year = 1991, depth_sc = 0, pred_length_sc = 0, doy_sc = seq(min(df_noz_doy_sel_M2$doy_sc), max(df_noz_doy_sel_M2$doy_sc), length.out = 50))

p_M2h_doy <- predict(M2h, newdata = nd_M2h_doy, se_fit = TRUE, re_form = NA)


# Conditional effects of Year
nd_M2h_Year <- data.frame(Year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), depth_sc = 0, pred_length_sc = 0, doy_sc = 0)

pr_M2h_Year <- predict(M2h, newdata = nd_M2h_Year, re_form = NA, se_fit = TRUE)

# Conditional effects of depth
nd_M2h_depth <- data.frame(Year = 1991, depth_sc = seq(min(df_noz_doy_sel_M2$depth_sc), max(df_noz_doy_sel_M2$depth_sc), length.out = 50), pred_length_sc = 0, doy_sc = 0)

pr_M2h_depth <- predict(M2h, newdata = nd_M2h_depth, re_form = NA, se_fit = TRUE)

# plot effects M2h
p_M2h_length |>
ggplot(aes(pred_length_sc, exp(est),
   #ymin = exp(est - 1.96 * est_se),
   #ymax = exp(est + 1.96 * est_se),
  group = as.factor(Year))) +
  geom_line(aes(colour = Year), lwd = 1) #+
  geom_ribbon(aes(fill = Year), alpha = 0.1)

p_M2h_doy |>
  ggplot(aes(doy_sc, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3) 

pr_M2h_Year |>
  ggplot(aes(Year, exp(est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(est-1.96*est_se), ymax = exp(est+1.96*est_se)), alpha = 0.3)

```

# M2h coeffficient of predator length over time  
```{r pred length over time M2h}
M2h <- readRDS(M2h, file = paste0("lammska_M2f_",date,".rds"))

pl_M2 <- as.list(M2h$sd_report, "Estimate")
pls_M2 <- as.list(M2h$sd_report, "Std. Error")

ypl_M2 <- data.frame(year = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year)), coef.est = pl$b_rw_t, coef.se = pls$b_rw_t)

ypl_M2 |>
ggplot(aes(year, exp(coef.est))) +
  geom_line() +
  geom_ribbon(aes(ymin = exp(coef.est-1.96*coef.se), ymax = exp(coef.est+1.96*coef.se)), alpha = 0.3) +
  scale_x_continuous(breaks = seq(min(df_noz_doy_sel_M2$Year), max(df_noz_doy_sel_M2$Year), by = 10)) +
  ylab("est for pred.length")

```
